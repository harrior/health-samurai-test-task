version: 2.1
orbs:
  node: circleci/node@5.1.0

executors:
  docker-publisher:
    working_directory: ~/patients
    environment:
      IMAGE_NAME: harrior/patient-app
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  prepare-cljs:


  build:
    working_directory: ~/patients
    docker:
      - image: circleci/clojure:lein-2.8.1
    environment:
      LEIN_ROOT: nbd
      JVM_OPTS: -Xmx3200m # limit the maximum heap size to prevent out of memory errors
    steps:
      - checkout
      - run: lein deps
      - run: lein uberjar
      - persist_to_workspace:
          root: ~/patients
          paths:
            - target
  build-docker:
    executor: docker-publisher
    steps:
      - checkout
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run:
          name: Build latest Docker image
          command: docker build ./patients -t $IMAGE_NAME:latest
      - run:
          name: Build tagged Docker image
          command: docker build ./patients -t $IMAGE_NAME:${CIRCLE_TAG}
      - run:
          name: Archive Docker images
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: ~/cci-patients
          paths:
            - ./image.tar
  publish-docker:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "${DOCKERHUB_PASS}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:${CIRCLE_TAG}